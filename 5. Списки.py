# Ссылка на  colab с данными по уроку
url = 'https://colab.research.google.com/drive/1llBwLk8LIZgNdg0atMOhOR-MGuiBPYPR?usp=sharing'
print(url)


# Создание списка
a = [1, 2, 3, "слово", 4, True, False]
print(a)


# Добавление элемента в конец списка (метод append)
b = []
print(b)
b.append(1)
print(b)
b.append(2)
print(b)


# Удаление всех элементов из списка
c = [1, 2, 3, "слово", 4, True, False]
c.clear()    # вариант 1
c = []       # вариант 2


# Копирование списка
arr = [1, 2, 3]
old_arr = arr               # указывает на переменную arr, но не сохраняетс старые данные
old_arr_2 = arr.copy()      # копирует и сохраняет первоначальные данные переменно arr
arr[0] = -100
print(arr, old_arr, old_arr_2)


# Подсчет количества вхождений указанного элемента
d = [1, 2, 3, "слово", 4, True, False, 1, 1, "слово_1", 345, 654, 2356, 235.343, "еще слово"]
print(d.count(1))


# Добавление элементов другой коллекции в текущий список
d = [1, 2, 3, "слово", 4, True, False, 1, 1, "слово_1", 345, 654, 2356, 235.343, "еще слово"]
e = ["фраза, которую надо добавить", 999, True, False, "Последняя фраза, которую надо добавить"]
d.extend(e)
print(d)


# Нахождение позиции первого вхождения указанного элемента
users = [1, 2, 3, 4, 1, 15, 3, 28, 1, 100]
dates = ['2022-01-15', '2022-01-16', '2022-03-23', '2022-04-14']
users.index(3)                       # найти индекс цифры 3 в списке users
print(users.index(3))
dates[2]                             # найти данные по индеку 2 в списке dates
print(dates[2])


# Добавление элемента на нужную позицию
print(d)
d.insert(3, 1000000)                    # вставить в позицию по индексу 3 данные 1000000 (или заменить старые)
print(d)
d.insert(int(len(d) / 2), 'insert')     # вставить в середину данные 'insert'
print(d)


# Удаление элемента указанной позиции и получение этого элемента
f = d.pop(0)      # удаляет из переменной d данные с индекса 0 и сохраняет ее в переменную f
print(f)
print(d)
d.remove(4)       # удаляет из переменной d первые данные с цифрой 4 (если цифры 4 нет, то получаем ошибку)


# Переворачивание списка
a = [1, 2, 3, 4, 5, -5, -7]
a.reverse()                # переворачивание
print(a)
a.sort()                   # сортировка
print(a)


# Проверка наличия элемента в списке с помощь. оператора in
print(a)
three = 3
print(three in a)                  # метод in покажет есть в списке 3 или нет (есть = true, нет = false)
a.append(['a', 'b', 'c', 'd'])     # добавили список в список
print(a)
lst = ['a', 'b', 'c', 'd']         # объявили переменную с добавленным списком
print(lst in a)                    # проверили наличие списка в списке


# Разница между методами append и extend
a.pop(len(a) - 1)                  # извлекли последний элемент из списка
b = a.copy()
c = a.copy()
b.append(lst)                      # добавили список в список в виде списка
c.extend(lst)                      # добавили каждый элемент из списка в список как отдельные элементы (а не списком)
print(str(a) + '\n' + str(b) + '\n' + str(c))


# Индексация и срезы
# arr[начало:конец:шаг]
print(b)                # показать всю переменную
print(b[7])             # показать данные в переменной b с индексом 7 (а данном случае это список в списке)
print(b[7][2])          # показать данные с индексом 2 в списке переменной b с индексом 7
print(b[0:4])           # показать срез данных с 0 по 3 включительно
print(b[2:4])           # показать срез данных с 2 по 3 включительно
print(b[:6])            # показать срез данных с самого начала по 5 включительно
print(b[4:])            # показать срез данных с индекса 4 и до конца списка
print(b[-1])            # показать последний элемент в списке
print(b[-3:-1])         # показать срез - последний и предпоследний элемент в списке


# Реверс списка
print(b)
b.reverse()             # вариант 1 (с изменением списка)
print(b)
b[::-1]                 # вариант 2 (без изменения списка)
print(b)
